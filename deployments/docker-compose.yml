version: '3.8'

networks:
  isa-network:
    driver: bridge

volumes:
  consul-data:
  postgres-data:
  redis-data:
  minio-data:

services:
  # ============== Infrastructure Services ==============
  
  # Consul Service Discovery
  consul:
    image: consul:latest
    container_name: isa-consul
    ports:
      - "8500:8500"
      - "8600:8600/udp"
    command: agent -dev -ui -client=0.0.0.0
    networks:
      - isa-network
    volumes:
      - consul-data:/consul/data

  # NATS Message Queue Cluster
  nats-1:
    image: nats:latest
    container_name: isa-cloud-nats-1
    ports:
      - "4222:4222"
      - "6222:6222"
      - "8222:8222"
    command: "--cluster nats://0.0.0.0:6222 --routes=nats://nats-2:6222,nats://nats-3:6222"
    networks:
      - isa-network

  nats-2:
    image: nats:latest
    container_name: isa-cloud-nats-2
    ports:
      - "4223:4222"
      - "6223:6222"
      - "8223:8222"
    command: "--cluster nats://0.0.0.0:6222 --routes=nats://nats-1:6222,nats://nats-3:6222"
    networks:
      - isa-network

  nats-3:
    image: nats:latest
    container_name: isa-cloud-nats-3
    ports:
      - "4224:4222"
      - "6224:6222"
      - "8224:8222"
    command: "--cluster nats://0.0.0.0:6222 --routes=nats://nats-1:6222,nats://nats-2:6222"
    networks:
      - isa-network

  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: isa-postgres
    environment:
      POSTGRES_DB: isa_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - isa-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: isa-redis
    ports:
      - "6379:6379"
    networks:
      - isa-network

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: isa-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data
    networks:
      - isa-network

  # ============== Blockchain Services ==============
  
  blockchain-node:
    build:
      context: ../isA_Chain
      dockerfile: ../isA_Cloud/deployments/dockerfiles/Dockerfile.blockchain
    container_name: isa-blockchain-node
    ports:
      - "8545:8545"
      - "8311:8311"  # DeFi API
      - "8312:8312"  # NFT API
      - "8315:8315"  # Tools API
    networks:
      - isa-network
    depends_on:
      - consul
      - postgres

  # ============== AI Services ==============
  
  mcp:
    build:
      context: ../isA_MCP
      dockerfile: ../isA_Cloud/deployments/dockerfiles/Dockerfile.mcp
      args:
        - mcp_source=.
    container_name: isa-mcp
    ports:
      - "8081:8081"
    environment:
      - MCP_PORT=8081
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/isa_mcp
      - PYTHONUNBUFFERED=1
    networks:
      - isa-network
    depends_on:
      - consul
      - postgres
      - redis

  model:
    build:
      context: ../isA_Model
      dockerfile: ../isA_Cloud/deployments/dockerfiles/Dockerfile.model
      args:
        - model_source=.
    container_name: isa-model
    ports:
      - "8082:8082"
    environment:
      - ISA_API_URL=http://model:8082
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/isa_model
      - PYTHONUNBUFFERED=1
    networks:
      - isa-network
    depends_on:
      - consul
      - postgres
      - mcp

  agent:
    build:
      context: ../isA_Agent
      dockerfile: ../isA_Cloud/deployments/dockerfiles/Dockerfile.agent
      args:
        - agent_source=.
    container_name: isa-agent
    ports:
      - "8083:8083"
    environment:
      - AGENT_PORT=8083
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - MCP_URL=http://mcp:8081
      - MODEL_URL=http://model:8082
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/isa_agent
      - PYTHONUNBUFFERED=1
    networks:
      - isa-network
    depends_on:
      - consul
      - postgres
      - mcp
      - model

  # ============== User Microservices ==============
  
  account-service:
    build:
      context: ../isA_user
      dockerfile: ../isA_Cloud/deployments/dockerfiles/Dockerfile.user-base
    container_name: isa-account
    ports:
      - "8201:8201"
    environment:
      - SERVICE_NAME=account
      - SERVICE_PORT=8201
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/isa_accounts
      - REDIS_URL=redis://redis:6379
    command: ["python", "-m", "uvicorn", "microservices.account_service.main:app", "--host", "0.0.0.0", "--port", "8201"]
    networks:
      - isa-network
    depends_on:
      - consul
      - postgres
      - redis

  auth-service:
    build:
      context: ../isA_user
      dockerfile: ../isA_Cloud/deployments/dockerfiles/Dockerfile.user-base
    container_name: isa-auth
    ports:
      - "8202:8202"
    environment:
      - SERVICE_NAME=auth
      - SERVICE_PORT=8202
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/isa_auth
      - REDIS_URL=redis://redis:6379
    command: ["python", "-m", "uvicorn", "microservices.auth_service.main:app", "--host", "0.0.0.0", "--port", "8202"]
    networks:
      - isa-network
    depends_on:
      - consul
      - postgres
      - redis

  authorization-service:
    build:
      context: ../isA_user
      dockerfile: ../isA_Cloud/deployments/dockerfiles/Dockerfile.user-base
    container_name: isa-authorization
    ports:
      - "8203:8203"
    environment:
      - SERVICE_NAME=authorization
      - SERVICE_PORT=8203
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/isa_authorization
      - REDIS_URL=redis://redis:6379
    command: ["python", "-m", "uvicorn", "microservices.authorization_service.main:app", "--host", "0.0.0.0", "--port", "8203"]
    networks:
      - isa-network
    depends_on:
      - consul
      - postgres
      - redis

  audit-service:
    build:
      context: ../isA_user
      dockerfile: ../isA_Cloud/deployments/dockerfiles/Dockerfile.user-base
    container_name: isa-audit
    ports:
      - "8204:8204"
    environment:
      - SERVICE_NAME=audit
      - SERVICE_PORT=8204
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/isa_audit
    command: ["python", "-m", "uvicorn", "microservices.audit_service.main:app", "--host", "0.0.0.0", "--port", "8204"]
    networks:
      - isa-network
    depends_on:
      - consul
      - postgres

  session-service:
    build:
      context: ../isA_user
      dockerfile: ../isA_Cloud/deployments/dockerfiles/Dockerfile.user-base
    container_name: isa-session
    ports:
      - "8205:8205"
    environment:
      - SERVICE_NAME=session
      - SERVICE_PORT=8205
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - REDIS_URL=redis://redis:6379
    command: ["python", "-m", "uvicorn", "microservices.session_service.main:app", "--host", "0.0.0.0", "--port", "8205"]
    networks:
      - isa-network
    depends_on:
      - consul
      - redis

  notification-service:
    build:
      context: ../isA_user
      dockerfile: ../isA_Cloud/deployments/dockerfiles/Dockerfile.user-base
    container_name: isa-notification
    ports:
      - "8206:8206"
    environment:
      - SERVICE_NAME=notification
      - SERVICE_PORT=8206
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/isa_notifications
      - REDIS_URL=redis://redis:6379
    command: ["python", "-m", "uvicorn", "microservices.notification_service.main:app", "--host", "0.0.0.0", "--port", "8206"]
    networks:
      - isa-network
    depends_on:
      - consul
      - postgres
      - redis

  payment-service:
    build:
      context: ../isA_user
      dockerfile: ../isA_Cloud/deployments/dockerfiles/Dockerfile.user-base
    container_name: isa-payment
    ports:
      - "8207:8207"
    environment:
      - SERVICE_NAME=payment
      - SERVICE_PORT=8207
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/isa_payments
    command: ["python", "-m", "uvicorn", "microservices.payment_service.main:app", "--host", "0.0.0.0", "--port", "8207"]
    networks:
      - isa-network
    depends_on:
      - consul
      - postgres

  storage-service:
    build:
      context: ../isA_user
      dockerfile: ../isA_Cloud/deployments/dockerfiles/Dockerfile.user-base
    container_name: isa-storage
    ports:
      - "8208:8208"
    environment:
      - SERVICE_NAME=storage
      - SERVICE_PORT=8208
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
    command: ["python", "-m", "uvicorn", "microservices.storage_service.main:app", "--host", "0.0.0.0", "--port", "8208"]
    networks:
      - isa-network
    depends_on:
      - consul
      - minio

  wallet-service:
    build:
      context: ../isA_user
      dockerfile: ../isA_Cloud/deployments/dockerfiles/Dockerfile.user-base
    container_name: isa-wallet
    ports:
      - "8209:8209"
    environment:
      - SERVICE_NAME=wallet
      - SERVICE_PORT=8209
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/isa_wallets
      - BLOCKCHAIN_RPC_URL=http://blockchain-node:8545
    command: ["python", "-m", "uvicorn", "microservices.wallet_service.main:app", "--host", "0.0.0.0", "--port", "8209"]
    networks:
      - isa-network
    depends_on:
      - consul
      - postgres
      - blockchain-node

  order-service:
    build:
      context: ../isA_user
      dockerfile: ../isA_Cloud/deployments/dockerfiles/Dockerfile.user-base
    container_name: isa-order
    ports:
      - "8210:8210"
    environment:
      - SERVICE_NAME=order
      - SERVICE_PORT=8210
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/isa_orders
    command: ["python", "-m", "uvicorn", "microservices.order_service.main:app", "--host", "0.0.0.0", "--port", "8210"]
    networks:
      - isa-network
    depends_on:
      - consul
      - postgres

  task-service:
    build:
      context: ../isA_user
      dockerfile: ../isA_Cloud/deployments/dockerfiles/Dockerfile.user-base
    container_name: isa-task
    ports:
      - "8211:8211"
    environment:
      - SERVICE_NAME=task
      - SERVICE_PORT=8211
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/isa_tasks
      - REDIS_URL=redis://redis:6379
    command: ["python", "-m", "uvicorn", "microservices.task_service.main:app", "--host", "0.0.0.0", "--port", "8211"]
    networks:
      - isa-network
    depends_on:
      - consul
      - postgres
      - redis

  organization-service:
    build:
      context: ../isA_user
      dockerfile: ../isA_Cloud/deployments/dockerfiles/Dockerfile.user-base
    container_name: isa-organization
    ports:
      - "8212:8212"
    environment:
      - SERVICE_NAME=organization
      - SERVICE_PORT=8212
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/isa_organizations
    command: ["python", "-m", "uvicorn", "microservices.organization_service.main:app", "--host", "0.0.0.0", "--port", "8212"]
    networks:
      - isa-network
    depends_on:
      - consul
      - postgres

  # ============== API Gateway ==============
  
  gateway:
    build:
      context: ../isA_Cloud
      dockerfile: deployments/dockerfiles/Dockerfile.gateway
    container_name: isa-gateway
    ports:
      - "8000:8000"
    environment:
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - NATS_URL=nats://nats-1:4222,nats://nats-2:4222,nats://nats-3:4222
    networks:
      - isa-network
    depends_on:
      - consul
      - nats-1
      - nats-2
      - nats-3
      - account-service
      - auth-service
      - mcp
      - model
      - agent
      - blockchain-node