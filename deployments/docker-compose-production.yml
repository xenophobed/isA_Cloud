version: '3.8'

# Production Docker Compose Configuration
# This excludes blockchain services and uses external managed services

networks:
  isa-network:
    driver: bridge

services:
  # ============== Infrastructure Services ==============
  
  # Consul Service Discovery (can be replaced with AWS Cloud Map in ECS)
  consul:
    image: consul:latest
    container_name: isa-consul
    command: agent -dev -ui -client=0.0.0.0
    networks:
      - isa-network
    restart: unless-stopped

  # NATS Message Queue Cluster (can be replaced with AWS MQ)
  nats-1:
    image: nats:latest
    container_name: isa-cloud-nats-1
    command: "--cluster nats://0.0.0.0:6222 --routes=nats://nats-2:6222,nats://nats-3:6222"
    networks:
      - isa-network
    restart: unless-stopped

  nats-2:
    image: nats:latest
    container_name: isa-cloud-nats-2
    command: "--cluster nats://0.0.0.0:6222 --routes=nats://nats-1:6222,nats://nats-3:6222"
    networks:
      - isa-network
    restart: unless-stopped

  nats-3:
    image: nats:latest
    container_name: isa-cloud-nats-3
    command: "--cluster nats://0.0.0.0:6222 --routes=nats://nats-1:6222,nats://nats-2:6222"
    networks:
      - isa-network
    restart: unless-stopped

  # ============== AI Services ==============
  
  mcp:
    image: ${ECR_REGISTRY}/isa-mcp:${IMAGE_TAG:-latest}
    container_name: isa-mcp
    environment:
      - MCP_PORT=8081
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - DATABASE_URL=${DATABASE_URL}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - REDIS_URL=${REDIS_URL}
      - PYTHONUNBUFFERED=1
      - ENVIRONMENT=production
    networks:
      - isa-network
    depends_on:
      - consul
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  model:
    image: ${ECR_REGISTRY}/isa-model:${IMAGE_TAG:-latest}
    container_name: isa-model
    environment:
      - ISA_API_URL=http://model:8082
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - DATABASE_URL=${DATABASE_URL}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - REPLICATE_API_TOKEN=${REPLICATE_API_TOKEN}
      - HF_TOKEN=${HF_TOKEN}
      - PYTHONUNBUFFERED=1
      - ENVIRONMENT=production
    networks:
      - isa-network
    depends_on:
      - consul
      - mcp
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '1.0'
          memory: 1G

  agent:
    image: ${ECR_REGISTRY}/isa-agent:${IMAGE_TAG:-latest}
    container_name: isa-agent
    environment:
      - AGENT_PORT=8083
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - MCP_URL=http://mcp:8081
      - MODEL_URL=http://model:8082
      - DATABASE_URL=${DATABASE_URL}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - PYTHONUNBUFFERED=1
      - ENVIRONMENT=production
    networks:
      - isa-network
    depends_on:
      - consul
      - mcp
      - model
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  # ============== User Microservices ==============
  
  account-service:
    image: ${ECR_REGISTRY}/isa-user-base:${IMAGE_TAG:-latest}
    container_name: isa-account
    environment:
      - SERVICE_NAME=account
      - SERVICE_PORT=8201
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - DATABASE_URL=${DATABASE_URL}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - REDIS_URL=${REDIS_URL}
      - ENVIRONMENT=production
    command: ["python", "-m", "uvicorn", "microservices.account_service.main:app", "--host", "0.0.0.0", "--port", "8201"]
    networks:
      - isa-network
    depends_on:
      - consul
    restart: unless-stopped

  auth-service:
    image: ${ECR_REGISTRY}/isa-user-base:${IMAGE_TAG:-latest}
    container_name: isa-auth
    environment:
      - SERVICE_NAME=auth
      - SERVICE_PORT=8202
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - DATABASE_URL=${DATABASE_URL}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - AUTH0_DOMAIN=${AUTH0_DOMAIN}
      - AUTH0_CLIENT_ID=${AUTH0_CLIENT_ID}
      - AUTH0_CLIENT_SECRET=${AUTH0_CLIENT_SECRET}
      - REDIS_URL=${REDIS_URL}
      - ENVIRONMENT=production
    command: ["python", "-m", "uvicorn", "microservices.auth_service.main:app", "--host", "0.0.0.0", "--port", "8202"]
    networks:
      - isa-network
    depends_on:
      - consul
    restart: unless-stopped

  authorization-service:
    image: ${ECR_REGISTRY}/isa-user-base:${IMAGE_TAG:-latest}
    container_name: isa-authorization
    environment:
      - SERVICE_NAME=authorization
      - SERVICE_PORT=8203
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - DATABASE_URL=${DATABASE_URL}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - REDIS_URL=${REDIS_URL}
      - ENVIRONMENT=production
    command: ["python", "-m", "uvicorn", "microservices.authorization_service.main:app", "--host", "0.0.0.0", "--port", "8203"]
    networks:
      - isa-network
    depends_on:
      - consul
    restart: unless-stopped

  payment-service:
    image: ${ECR_REGISTRY}/isa-user-base:${IMAGE_TAG:-latest}
    container_name: isa-payment
    environment:
      - SERVICE_NAME=payment
      - SERVICE_PORT=8207
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - DATABASE_URL=${DATABASE_URL}
      - STRIPE_API_KEY=${STRIPE_API_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - ENVIRONMENT=production
    command: ["python", "-m", "uvicorn", "microservices.payment_service.main:app", "--host", "0.0.0.0", "--port", "8207"]
    networks:
      - isa-network
    depends_on:
      - consul
    restart: unless-stopped

  # ... 其他用户微服务可以类似配置 ...

  # ============== API Gateway ==============
  
  gateway:
    image: ${ECR_REGISTRY}/isa-gateway:${IMAGE_TAG:-latest}
    container_name: isa-gateway
    ports:
      - "80:8000"  # 生产环境通过负载均衡器
    environment:
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - NATS_URL=nats://nats-1:4222,nats://nats-2:4222,nats://nats-3:4222
      - ENVIRONMENT=production
    networks:
      - isa-network
    depends_on:
      - consul
      - nats-1
      - nats-2
      - nats-3
      - account-service
      - auth-service
      - mcp
      - model
      - agent
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M