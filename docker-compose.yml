version: '3.8'

services:
  # Consul Service Discovery
  consul:
    image: consul:latest
    container_name: isa-consul
    ports:
      - "8500:8500"
      - "8600:8600/udp"
    command: agent -dev -ui -client=0.0.0.0
    networks:
      - isa-network

  # API Gateway
  gateway:
    build:
      context: .
      dockerfile: Dockerfile.gateway
    container_name: isa-gateway
    ports:
      - "8080:8080"
    depends_on:
      - consul
    environment:
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
    volumes:
      - ./configs:/app/configs
    networks:
      - isa-network

  # Account Service
  account-service:
    build:
      context: ../isA_user
      dockerfile: microservices/account_service/Dockerfile
    container_name: isa-account
    ports:
      - "8201:8201"
    depends_on:
      - consul
      - postgres
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/isa_accounts
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - SERVICE_HOST=account-service
      - SERVICE_PORT=8201
    networks:
      - isa-network

  # Auth Service
  auth-service:
    build:
      context: ../isA_user
      dockerfile: microservices/auth_service/Dockerfile
    container_name: isa-auth
    ports:
      - "8202:8202"
    depends_on:
      - consul
      - postgres
      - redis
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/isa_auth
      - REDIS_URL=redis://redis:6379/0
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - SERVICE_HOST=auth-service
      - SERVICE_PORT=8202
    networks:
      - isa-network

  # Authorization Service
  authorization-service:
    build:
      context: ../isA_user
      dockerfile: microservices/authorization_service/Dockerfile
    container_name: isa-authorization
    ports:
      - "8203:8203"
    depends_on:
      - consul
      - postgres
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/isa_authorization
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - SERVICE_HOST=authorization-service
      - SERVICE_PORT=8203
    networks:
      - isa-network

  # Audit Service
  audit-service:
    build:
      context: ../isA_user
      dockerfile: microservices/audit_service/Dockerfile
    container_name: isa-audit
    ports:
      - "8204:8204"
    depends_on:
      - consul
      - postgres
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/isa_audit
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - SERVICE_HOST=audit-service
      - SERVICE_PORT=8204
    networks:
      - isa-network

  # Notification Service
  notification-service:
    build:
      context: ../isA_user
      dockerfile: microservices/notification_service/Dockerfile
    container_name: isa-notification
    ports:
      - "8206:8206"
    depends_on:
      - consul
      - postgres
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/isa_notifications
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - SERVICE_HOST=notification-service
      - SERVICE_PORT=8206
      - SMTP_HOST=smtp.gmail.com
      - SMTP_PORT=587
    networks:
      - isa-network

  # Payment Service
  payment-service:
    build:
      context: ../isA_user
      dockerfile: microservices/payment_service/Dockerfile
    container_name: isa-payment
    ports:
      - "8207:8207"
    depends_on:
      - consul
      - postgres
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/isa_payments
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - SERVICE_HOST=payment-service
      - SERVICE_PORT=8207
    networks:
      - isa-network

  # Storage Service
  storage-service:
    build:
      context: ../isA_user
      dockerfile: microservices/storage_service/Dockerfile
    container_name: isa-storage
    ports:
      - "8209:8209"
    depends_on:
      - consul
      - postgres
      - minio
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/isa_storage
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - SERVICE_HOST=storage-service
      - SERVICE_PORT=8209
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
    networks:
      - isa-network

  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: isa-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - isa-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: isa-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - isa-network

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: isa-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - isa-network

networks:
  isa-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  minio_data: