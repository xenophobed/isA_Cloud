name: Handle External Repo Updates

on:
  repository_dispatch:
    types: [deploy-trigger]

env:
  AWS_REGION: us-east-1
  ECS_CLUSTER: isa-platform-cluster

jobs:
  deploy-service:
    runs-on: ubuntu-latest
    if: contains(fromJson('["isA_MCP", "isA_Model", "isA_Agent", "isA_user", "isA_Chain"]'), github.event.client_payload.repository)
    
    steps:
    - name: Checkout isA_Cloud
      uses: actions/checkout@v4
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Determine service name
      id: service
      run: |
        REPO="${{ github.event.client_payload.repository }}"
        case $REPO in
          isA_MCP) echo "service=mcp" >> $GITHUB_OUTPUT ;;
          isA_Model) echo "service=model" >> $GITHUB_OUTPUT ;;
          isA_Agent) echo "service=agent" >> $GITHUB_OUTPUT ;;
          isA_user) echo "service=user" >> $GITHUB_OUTPUT ;;
          isA_Chain) echo "service=blockchain" >> $GITHUB_OUTPUT ;;
          *) echo "service=unknown" >> $GITHUB_OUTPUT ;;
        esac
        
    - name: Deploy triggered service
      if: steps.service.outputs.service != 'unknown'
      env:
        GITHUB_SHA: ${{ github.event.client_payload.sha }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      run: |
        chmod +x deployments/scripts/deploy-service.sh
        ./deployments/scripts/deploy-service.sh ${{ steps.service.outputs.service }} staging deploy
        
    - name: Notify Slack
      if: always()
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
        message: |
          Repository: ${{ github.event.client_payload.repository }}
          Service: ${{ steps.service.outputs.service }}
          Status: ${{ job.status }}
          Commit: ${{ github.event.client_payload.sha }}