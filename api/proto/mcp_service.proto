// mcp_service.proto - MCP服务gRPC接口
syntax = "proto3";

package isa.mcp;

option go_package = "github.com/isa-cloud/isa_cloud/pkg/proto/mcp";

import "common.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/struct.proto";

// ========================================
// MCP服务 (Model Context Protocol)
// ========================================

service MCPService {
    // 资源管理
    rpc ListResources(ListResourcesRequest) returns (ListResourcesResponse);
    rpc GetResource(GetResourceRequest) returns (GetResourceResponse);
    rpc CreateResource(CreateResourceRequest) returns (CreateResourceResponse);
    rpc UpdateResource(UpdateResourceRequest) returns (UpdateResourceResponse);
    rpc DeleteResource(DeleteResourceRequest) returns (DeleteResourceResponse);
    
    // 数据库操作
    rpc QueryDatabase(QueryDatabaseRequest) returns (QueryDatabaseResponse);
    rpc ExecuteSQL(ExecuteSQLRequest) returns (ExecuteSQLResponse);
    rpc QueryVectorDB(QueryVectorDBRequest) returns (QueryVectorDBResponse);
    rpc QueryGraphDB(QueryGraphDBRequest) returns (QueryGraphDBResponse);
    
    // 存储操作
    rpc UploadFile(UploadFileRequest) returns (UploadFileResponse);
    rpc DownloadFile(DownloadFileRequest) returns (DownloadFileResponse);
    rpc ListFiles(ListFilesRequest) returns (ListFilesResponse);
    rpc DeleteFile(DeleteFileRequest) returns (DeleteFileResponse);
    
    // 外部API调用
    rpc CallExternalAPI(CallExternalAPIRequest) returns (CallExternalAPIResponse);
    rpc GetAPIStatus(GetAPIStatusRequest) returns (GetAPIStatusResponse);
    
    // 健康状态
    rpc GetResourceHealth(GetResourceHealthRequest) returns (GetResourceHealthResponse);
}

// ========================================
// 资源数据结构
// ========================================

message Resource {
    string resource_id = 1;
    ResourceType type = 2;
    string name = 3;
    ResourceStatus status = 4;
    string organization_id = 5;
    google.protobuf.Struct config = 6;
    google.protobuf.Struct metadata = 7;
    google.protobuf.Timestamp created_at = 8;
    google.protobuf.Timestamp updated_at = 9;
}

enum ResourceType {
    RESOURCE_TYPE_UNKNOWN = 0;
    RESOURCE_TYPE_POSTGRESQL = 1;
    RESOURCE_TYPE_MYSQL = 2;
    RESOURCE_TYPE_MONGODB = 3;
    RESOURCE_TYPE_REDIS = 4;
    RESOURCE_TYPE_VECTOR_DB = 5;     // Chroma, Qdrant, Pinecone
    RESOURCE_TYPE_GRAPH_DB = 6;      // Neo4j, ArangoDB
    RESOURCE_TYPE_OBJECT_STORE = 7;  // S3, MinIO
    RESOURCE_TYPE_FILE_SYSTEM = 8;
    RESOURCE_TYPE_DUCKDB = 9;
    RESOURCE_TYPE_EXTERNAL_API = 10;
}

enum ResourceStatus {
    RESOURCE_STATUS_UNKNOWN = 0;
    RESOURCE_STATUS_CONNECTING = 1;
    RESOURCE_STATUS_CONNECTED = 2;
    RESOURCE_STATUS_DISCONNECTED = 3;
    RESOURCE_STATUS_ERROR = 4;
    RESOURCE_STATUS_MAINTENANCE = 5;
}

// ========================================
// 资源管理
// ========================================

message ListResourcesRequest {
    string organization_id = 1;
    ResourceType type = 2;
    ResourceStatus status = 3;
    int32 page = 4;
    int32 page_size = 5;
}

message ListResourcesResponse {
    bool success = 1;
    repeated Resource resources = 2;
    int32 total = 3;
    string error = 4;
}

message GetResourceRequest {
    string resource_id = 1;
}

message GetResourceResponse {
    bool success = 1;
    Resource resource = 2;
    string error = 3;
}

message CreateResourceRequest {
    string name = 1;
    ResourceType type = 2;
    string organization_id = 3;
    google.protobuf.Struct config = 4;
    google.protobuf.Struct metadata = 5;
}

message CreateResourceResponse {
    bool success = 1;
    Resource resource = 2;
    string error = 3;
}

message UpdateResourceRequest {
    string resource_id = 1;
    string name = 2;
    google.protobuf.Struct config = 3;
    google.protobuf.Struct metadata = 4;
}

message UpdateResourceResponse {
    bool success = 1;
    Resource resource = 2;
    string error = 3;
}

message DeleteResourceRequest {
    string resource_id = 1;
}

message DeleteResourceResponse {
    bool success = 1;
    string message = 2;
    string error = 3;
}

// ========================================
// 数据库操作
// ========================================

message QueryDatabaseRequest {
    string resource_id = 1;
    string query = 2;
    google.protobuf.Struct parameters = 3;
    int32 limit = 4;
    int32 offset = 5;
}

message QueryDatabaseResponse {
    bool success = 1;
    repeated google.protobuf.Struct rows = 2;
    int32 total_rows = 3;
    repeated string columns = 4;
    double execution_time_ms = 5;
    string error = 6;
}

message ExecuteSQLRequest {
    string resource_id = 1;
    string sql = 2;
    google.protobuf.Struct parameters = 3;
}

message ExecuteSQLResponse {
    bool success = 1;
    int32 affected_rows = 2;
    google.protobuf.Struct result = 3;
    double execution_time_ms = 4;
    string error = 5;
}

message QueryVectorDBRequest {
    string resource_id = 1;
    string collection = 2;
    repeated float query_vector = 3;
    string query_text = 4;
    int32 top_k = 5;
    google.protobuf.Struct filters = 6;
}

message QueryVectorDBResponse {
    bool success = 1;
    repeated VectorSearchResult results = 2;
    double search_time_ms = 3;
    string error = 4;
}

message VectorSearchResult {
    string id = 1;
    double score = 2;
    google.protobuf.Struct metadata = 3;
    string content = 4;
}

message QueryGraphDBRequest {
    string resource_id = 1;
    string cypher_query = 2; // For Neo4j
    google.protobuf.Struct parameters = 3;
}

message QueryGraphDBResponse {
    bool success = 1;
    repeated google.protobuf.Struct nodes = 2;
    repeated google.protobuf.Struct relationships = 3;
    double execution_time_ms = 4;
    string error = 5;
}

// ========================================
// 存储操作
// ========================================

message UploadFileRequest {
    string resource_id = 1;
    string file_path = 2;
    bytes content = 3;
    string content_type = 4;
    google.protobuf.Struct metadata = 5;
}

message UploadFileResponse {
    bool success = 1;
    string file_id = 2;
    string file_url = 3;
    int64 file_size = 4;
    string error = 5;
}

message DownloadFileRequest {
    string resource_id = 1;
    string file_path = 2;
}

message DownloadFileResponse {
    bool success = 1;
    bytes content = 2;
    string content_type = 3;
    int64 file_size = 4;
    google.protobuf.Struct metadata = 5;
    string error = 6;
}

message ListFilesRequest {
    string resource_id = 1;
    string prefix = 2;
    int32 limit = 3;
    string cursor = 4;
}

message ListFilesResponse {
    bool success = 1;
    repeated FileInfo files = 2;
    string next_cursor = 3;
    string error = 4;
}

message FileInfo {
    string file_id = 1;
    string file_path = 2;
    int64 file_size = 3;
    string content_type = 4;
    google.protobuf.Timestamp created_at = 5;
    google.protobuf.Timestamp modified_at = 6;
    google.protobuf.Struct metadata = 7;
}

message DeleteFileRequest {
    string resource_id = 1;
    string file_path = 2;
}

message DeleteFileResponse {
    bool success = 1;
    string message = 2;
    string error = 3;
}

// ========================================
// 外部API调用
// ========================================

message CallExternalAPIRequest {
    string resource_id = 1;
    string method = 2;        // GET, POST, PUT, DELETE
    string endpoint = 3;
    map<string, string> headers = 4;
    google.protobuf.Struct body = 5;
    int32 timeout_seconds = 6;
}

message CallExternalAPIResponse {
    bool success = 1;
    int32 status_code = 2;
    map<string, string> headers = 3;
    google.protobuf.Struct body = 4;
    double response_time_ms = 5;
    string error = 6;
}

message GetAPIStatusRequest {
    string resource_id = 1;
}

message GetAPIStatusResponse {
    bool success = 1;
    APIStatus status = 2;
    string error = 3;
}

message APIStatus {
    string resource_id = 1;
    bool is_healthy = 2;
    double response_time_ms = 3;
    int32 rate_limit_remaining = 4;
    google.protobuf.Timestamp last_check = 5;
    string endpoint = 6;
}

// ========================================
// 健康状态
// ========================================

message GetResourceHealthRequest {
    string resource_id = 1;
}

message GetResourceHealthResponse {
    bool success = 1;
    ResourceHealth health = 2;
    string error = 3;
}

message ResourceHealth {
    string resource_id = 1;
    ResourceStatus status = 2;
    bool is_connected = 3;
    double connection_pool_usage = 4;
    int32 active_connections = 5;
    double average_response_time_ms = 6;
    int64 total_requests = 7;
    int64 failed_requests = 8;
    google.protobuf.Timestamp last_health_check = 9;
}