// user_service.proto - 用户服务gRPC接口
syntax = "proto3";

package isa.user;

option go_package = "github.com/isa-cloud/isa_cloud/pkg/proto/user";

import "common.proto";
import "google/protobuf/timestamp.proto";

// ========================================
// 用户服务
// ========================================

service UserService {
    // 用户管理
    rpc GetUser(GetUserRequest) returns (GetUserResponse);
    rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
    rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);
    rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse);
    rpc ListUsers(ListUsersRequest) returns (ListUsersResponse);
    
    // 用户验证和状态
    rpc EnsureUserExists(EnsureUserExistsRequest) returns (EnsureUserExistsResponse);
    rpc GetUserByAuth0ID(GetUserByAuth0IDRequest) returns (GetUserByAuth0IDResponse);
    
    // 组织管理
    rpc GetOrganization(GetOrganizationRequest) returns (GetOrganizationResponse);
    rpc CreateOrganization(CreateOrganizationRequest) returns (CreateOrganizationResponse);
    rpc ListOrganizations(ListOrganizationsRequest) returns (ListOrganizationsResponse);
    
    // 积分管理
    rpc ConsumeCredits(ConsumeCreditsRequest) returns (ConsumeCreditsResponse);
    rpc GetCreditsBalance(GetCreditsBalanceRequest) returns (GetCreditsBalanceResponse);
}

// ========================================
// 用户相关请求/响应
// ========================================

message GetUserRequest {
    string user_id = 1;
}

message GetUserResponse {
    bool success = 1;
    isa.common.User user = 2;
    string error = 3;
}

message CreateUserRequest {
    string email = 1;
    string name = 2;
    string auth0_id = 3;
    string organization_id = 4;
    map<string, string> metadata = 5;
}

message CreateUserResponse {
    bool success = 1;
    isa.common.User user = 2;
    string error = 3;
}

message UpdateUserRequest {
    string user_id = 1;
    string name = 2;
    string email = 3;
    bool is_active = 4;
    map<string, string> metadata = 5;
}

message UpdateUserResponse {
    bool success = 1;
    isa.common.User user = 2;
    string error = 3;
}

message DeleteUserRequest {
    string user_id = 1;
}

message DeleteUserResponse {
    bool success = 1;
    string message = 2;
    string error = 3;
}

message ListUsersRequest {
    string organization_id = 1;
    int32 page = 2;
    int32 page_size = 3;
    string search = 4;
}

message ListUsersResponse {
    bool success = 1;
    repeated isa.common.User users = 2;
    int32 total = 3;
    int32 page = 4;
    int32 page_size = 5;
    string error = 6;
}

// ========================================
// 用户验证
// ========================================

message EnsureUserExistsRequest {
    string auth0_id = 1;
    string email = 2;
    string name = 3;
}

message EnsureUserExistsResponse {
    bool success = 1;
    isa.common.User user = 2;
    bool created = 3; // true if user was created, false if already existed
    string error = 4;
}

message GetUserByAuth0IDRequest {
    string auth0_id = 1;
}

message GetUserByAuth0IDResponse {
    bool success = 1;
    isa.common.User user = 2;
    string error = 3;
}

// ========================================
// 组织相关
// ========================================

message GetOrganizationRequest {
    string organization_id = 1;
}

message GetOrganizationResponse {
    bool success = 1;
    isa.common.Organization organization = 2;
    string error = 3;
}

message CreateOrganizationRequest {
    string name = 1;
    string display_name = 2;
    string type = 3;
    string plan = 4;
    string admin_user_id = 5;
}

message CreateOrganizationResponse {
    bool success = 1;
    isa.common.Organization organization = 2;
    string error = 3;
}

message ListOrganizationsRequest {
    int32 page = 1;
    int32 page_size = 2;
    string search = 3;
}

message ListOrganizationsResponse {
    bool success = 1;
    repeated isa.common.Organization organizations = 2;
    int32 total = 3;
    string error = 4;
}

// ========================================
// 积分相关
// ========================================

message ConsumeCreditsRequest {
    string user_id = 1;
    int32 amount = 2;
    string reason = 3;
    map<string, string> metadata = 4;
}

message ConsumeCreditsResponse {
    bool success = 1;
    int32 remaining_credits = 2;
    string transaction_id = 3;
    string error = 4;
}

message GetCreditsBalanceRequest {
    string user_id = 1;
}

message GetCreditsBalanceResponse {
    bool success = 1;
    int32 balance = 2;
    string error = 3;
}