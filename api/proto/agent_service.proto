// agent_service.proto - Agent服务gRPC接口
syntax = "proto3";

package isa.agent;

option go_package = "github.com/isa-cloud/isa_cloud/pkg/proto/agent";

import "common.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/struct.proto";

// ========================================
// Agent服务
// ========================================

service AgentService {
    // Agent管理
    rpc CreateAgent(CreateAgentRequest) returns (CreateAgentResponse);
    rpc GetAgent(GetAgentRequest) returns (GetAgentResponse);
    rpc ListAgents(ListAgentsRequest) returns (ListAgentsResponse);
    rpc UpdateAgent(UpdateAgentRequest) returns (UpdateAgentResponse);
    rpc DeleteAgent(DeleteAgentRequest) returns (DeleteAgentResponse);
    
    // Agent会话
    rpc CreateSession(CreateSessionRequest) returns (CreateSessionResponse);
    rpc SendMessage(SendMessageRequest) returns (SendMessageResponse);
    rpc GetSessionHistory(GetSessionHistoryRequest) returns (GetSessionHistoryResponse);
    rpc EndSession(EndSessionRequest) returns (EndSessionResponse);
    
    // Agent工作流
    rpc RunWorkflow(RunWorkflowRequest) returns (RunWorkflowResponse);
    rpc GetWorkflowStatus(GetWorkflowStatusRequest) returns (GetWorkflowStatusResponse);
    rpc CancelWorkflow(CancelWorkflowRequest) returns (CancelWorkflowResponse);
    
    // Agent健康状态
    rpc GetAgentHealth(GetAgentHealthRequest) returns (GetAgentHealthResponse);
}

// ========================================
// Agent数据结构
// ========================================

message Agent {
    string agent_id = 1;
    string name = 2;
    string description = 3;
    AgentType type = 4;
    AgentStatus status = 5;
    string organization_id = 6;
    string user_id = 7;
    AgentConfig config = 8;
    repeated string tools = 9;
    google.protobuf.Timestamp created_at = 10;
    google.protobuf.Timestamp updated_at = 11;
}

enum AgentType {
    AGENT_TYPE_UNKNOWN = 0;
    AGENT_TYPE_CHAT = 1;
    AGENT_TYPE_WORKFLOW = 2;
    AGENT_TYPE_TOOL = 3;
    AGENT_TYPE_RESEARCH = 4;
    AGENT_TYPE_CODE = 5;
}

enum AgentStatus {
    AGENT_STATUS_UNKNOWN = 0;
    AGENT_STATUS_IDLE = 1;
    AGENT_STATUS_RUNNING = 2;
    AGENT_STATUS_WAITING = 3;
    AGENT_STATUS_ERROR = 4;
    AGENT_STATUS_STOPPED = 5;
}

message AgentConfig {
    string model_id = 1;
    double temperature = 2;
    int32 max_tokens = 3;
    string system_prompt = 4;
    google.protobuf.Struct parameters = 5;
}

// ========================================
// Agent管理
// ========================================

message CreateAgentRequest {
    string name = 1;
    string description = 2;
    AgentType type = 3;
    string organization_id = 4;
    string user_id = 5;
    AgentConfig config = 6;
    repeated string tools = 7;
}

message CreateAgentResponse {
    bool success = 1;
    Agent agent = 2;
    string error = 3;
}

message GetAgentRequest {
    string agent_id = 1;
}

message GetAgentResponse {
    bool success = 1;
    Agent agent = 2;
    string error = 3;
}

message ListAgentsRequest {
    string organization_id = 1;
    string user_id = 2;
    AgentType type = 3;
    int32 page = 4;
    int32 page_size = 5;
}

message ListAgentsResponse {
    bool success = 1;
    repeated Agent agents = 2;
    int32 total = 3;
    string error = 4;
}

message UpdateAgentRequest {
    string agent_id = 1;
    string name = 2;
    string description = 3;
    AgentConfig config = 4;
    repeated string tools = 5;
}

message UpdateAgentResponse {
    bool success = 1;
    Agent agent = 2;
    string error = 3;
}

message DeleteAgentRequest {
    string agent_id = 1;
}

message DeleteAgentResponse {
    bool success = 1;
    string message = 2;
    string error = 3;
}

// ========================================
// Agent会话
// ========================================

message CreateSessionRequest {
    string agent_id = 1;
    string user_id = 2;
    google.protobuf.Struct context = 3;
}

message CreateSessionResponse {
    bool success = 1;
    string session_id = 2;
    string error = 3;
}

message SendMessageRequest {
    string session_id = 1;
    string message = 2;
    google.protobuf.Struct context = 3;
}

message SendMessageResponse {
    bool success = 1;
    string response = 2;
    string message_id = 3;
    google.protobuf.Struct metadata = 4;
    string error = 5;
}

message GetSessionHistoryRequest {
    string session_id = 1;
    int32 limit = 2;
    string cursor = 3;
}

message GetSessionHistoryResponse {
    bool success = 1;
    repeated ChatMessage messages = 2;
    string next_cursor = 3;
    string error = 4;
}

message ChatMessage {
    string message_id = 1;
    string role = 2; // user, assistant, system
    string content = 3;
    google.protobuf.Timestamp timestamp = 4;
    google.protobuf.Struct metadata = 5;
}

message EndSessionRequest {
    string session_id = 1;
}

message EndSessionResponse {
    bool success = 1;
    string message = 2;
    string error = 3;
}

// ========================================
// Agent工作流
// ========================================

message RunWorkflowRequest {
    string agent_id = 1;
    string workflow_type = 2;
    google.protobuf.Struct input_data = 3;
    google.protobuf.Struct config = 4;
}

message RunWorkflowResponse {
    bool success = 1;
    string workflow_id = 2;
    WorkflowStatus status = 3;
    string error = 4;
}

message GetWorkflowStatusRequest {
    string workflow_id = 1;
}

message GetWorkflowStatusResponse {
    bool success = 1;
    WorkflowStatus status = 2;
    google.protobuf.Struct result = 3;
    string error = 4;
}

enum WorkflowStatus {
    WORKFLOW_STATUS_UNKNOWN = 0;
    WORKFLOW_STATUS_PENDING = 1;
    WORKFLOW_STATUS_RUNNING = 2;
    WORKFLOW_STATUS_COMPLETED = 3;
    WORKFLOW_STATUS_FAILED = 4;
    WORKFLOW_STATUS_CANCELLED = 5;
}

message CancelWorkflowRequest {
    string workflow_id = 1;
}

message CancelWorkflowResponse {
    bool success = 1;
    string message = 2;
    string error = 3;
}

// ========================================
// Agent健康状态
// ========================================

message GetAgentHealthRequest {
    string agent_id = 1;
}

message GetAgentHealthResponse {
    bool success = 1;
    AgentHealth health = 2;
    string error = 3;
}

message AgentHealth {
    string agent_id = 1;
    AgentStatus status = 2;
    int32 active_sessions = 3;
    int32 running_workflows = 4;
    double cpu_usage = 5;
    double memory_usage = 6;
    google.protobuf.Timestamp last_activity = 7;
}